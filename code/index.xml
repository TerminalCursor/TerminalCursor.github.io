<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codes on FOSS Website</title>
    <link>http://TerminalCursor.github.io/code/</link>
    <description>Recent content in Codes on FOSS Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 May 2020 11:22:11 -0700</lastBuildDate>
    
	<atom:link href="http://TerminalCursor.github.io/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C Library</title>
      <link>http://TerminalCursor.github.io/code/c_library/</link>
      <pubDate>Fri, 08 May 2020 11:22:11 -0700</pubDate>
      
      <guid>http://TerminalCursor.github.io/code/c_library/</guid>
      <description>#define	OK	0 #define	NO_INPUT	1 #define	TOO_LONG	2 // Print a given integer in hex form, helpful for debugging intprintHex(inta) { printf(&amp;quot;0x%08X\n&amp;quot;, a); return0; }
// Safe input method staticintgetLine(char*buff, intsize) { intch, extra; fflush(stdout); intbroken =1; for(inti =0; i &amp;lt;size; i++) { ch =getchar(); if(ch ==EOF ||ch ==&#39;\n&#39;) { if(i ==0) returnNO_INPUT; broken =0; break; } elsebuff[i] =ch; } if(broken ==1){ while((getchar()) !=&#39;\n&#39;); returnTOO_LONG; } returnOK; }
// Getting input intgetStr(char*buffer, intmax_length) { returngetLine(buffer, max_length); }</description>
    </item>
    
  </channel>
</rss>